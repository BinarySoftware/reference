<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Luna Language documentation">
    <meta name="keywords" content="Luna,Lang,Luna Language,Documentation,Docs,Luna::Docs,LunaDocs">
    <meta name="author" content="Maciej Mikolajek">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Luna Docs</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="css/style.css">
    <!--[if IE]><link rel="shortcut icon" href="favicon.ico"><![endif]-->
    <link rel="icon" href="favicon.ico">

    <script src="https://coffeescript.org/v2/browser-compiler/coffeescript.js" type="text/javascript"></script>
    <script src="JSONtoHTML.coffee" type="text/coffeescript"></script>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.js" integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>
</head>

<body id="body">
    <!-- Header -->
    <div class="pageHeader" style="display: inline-flex">
        <span class="showMenuOnSmallScreen" onclick="openNav()">â˜°</span>
        <a href="http://luna-lang.org"><img src="luna-logo.png" style="width:64px;height:64px;"></a>
        <p class="lunaDocsLogo">Luna Docs</p>
    </div>
    <!-- Side navigation -->
    <div class="sidenav" id="menuPane">
        <!-- Menu goes here -->
    </div>

    <!-- Page content -->
    <div class="main" id="data">
        <!-- Data goes here -->
    </div>

    <!-- Script for showing and hiding side menu -->
    <script>
        function openNav() {
            if (document.getElementById("menuPane").style.width != "350px") {
                document.getElementById("menuPane").style.width = "350px";
            } else {
                document.getElementById("menuPane").style.width = "0";
            }
        }
    </script>

    <script>
        var MY_SELECTOR = "#treeMID" // Could be any selector

        var observer = new MutationObserver(function(mutations) {
            for (var i = 0; i < mutations.length; i++) {
                for (var j = 0; j < mutations[i].addedNodes.length; j++) {
                    // We're iterating through _all_ the elements as the parser parses them,
                    // deciding if they're the one we're looking for.
                    if (mutations[i].addedNodes[j].id == MY_SELECTOR) {
                        alert("My Element Is Ready!");
                        $('#treeMID').treed();
                        // We found our element, we're done:
                        observer.disconnect();
                    };
                }
            }
        });

        observer.observe(document.documentElement, {
            childList: true,
            subtree: true
        });


        $.fn.extend({
            treed: function(o) {

                var openedClass = 'fa fa-angle-double-down';
                var closedClass = 'fa fa-angle-double-right';

                if (typeof o != 'undefined') {
                    if (typeof o.openedClass != 'undefined') {
                        openedClass = o.openedClass;
                    }
                    if (typeof o.closedClass != 'undefined') {
                        closedClass = o.closedClass;
                    }
                };

                //initialize each of the top levels
                var tree = $(this);
                tree.addClass("treeMenu");
                tree.find('li').has("ul").each(function() {
                    var branch = $(this); //li with children ul
                    branch.prepend("<i class='indicator " + closedClass + "'></i>");
                    branch.addClass('branch');
                    branch.on('click', function(e) {
                        if (this == e.target) {
                            var icon = $(this).children('i:first');
                            icon.toggleClass(openedClass + " " + closedClass);
                            $(this).children().children().toggle();
                        }
                    })
                    branch.children().children().toggle();
                });
                //fire event from the dynamically added icon
                tree.find('.branch .indicator').each(function() {
                    $(this).on('click', function() {
                        $(this).closest('li').click();
                    });
                });
                //fire event to open branch if the li contains an anchor instead of text
                tree.find('.branch>a').each(function() {
                    $(this).on('click', function(e) {
                        $(this).closest('li').click();
                        e.preventDefault();
                    });
                });
                //fire event to open branch if the li contains a button instead of text
                tree.find('.branch>button').each(function() {
                    $(this).on('click', function(e) {
                        $(this).closest('li').click();
                        e.preventDefault();
                    });
                });
            }
        });
    </script>
</body>

</html>